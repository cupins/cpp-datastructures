

//#include "stdafx.h"
#include "Queue.h"

///////////////////////////////////////////////////////////////////////
//!  Parameters: A Template address 
//
//!  Inserts the data to the back of the queue for FIFO ordering
///////////////////////////////////////////////////////////////////////
template <class T>
void Queue<T>::enqueue(const T& x) {
	this->List<T>::addLast(x);
}

///////////////////////////////////////////////////////////////////////
//!  Parameters: NONE
//
//!  returns the front of the data and deletes it
///////////////////////////////////////////////////////////////////////
template <class T>
T Queue<T>::dequeue() {
	return this->List<T>::removeFirst();
}

///////////////////////////////////////////////////////////////////////
//!  Parameters: NONE
//
//!  Prints the stack commented shows the front of the queue
///////////////////////////////////////////////////////////////////////
template <class T>
void Queue<T>::print() const {
	//cout << "FRONT ";
	this->List<T>::print();
}


